// שינויים נדרשים בקובץ App.js

// 1. מצא את הפונקציה AppContent ואת ההגדרה של המשתנה activePage
// בערך בשורה 20-30, תמצא משהו כמו:
function AppContent() {
  const { user, isLoading, isInitialized, signOut } = useAuth();
  const [selectedLLM, setSelectedLLM] = useState(AVAILABLE_LLMS[0]);
  const [messages, setMessages] = useState([]);
  const [activeChat, setActiveChat] = useState(null);
  const [activePage, setActivePage] = useState(null);
  // ...

// 2. שנה את ההגדרה של activePage כך שתבדוק את localStorage
// במקום:
  const [activePage, setActivePage] = useState(null);

// שנה ל:
  const [activePage, setActivePage] = useState(() => {
    // Check if we should open chats directly
    const defaultPage = localStorage.getItem('defaultPage');
    console.log('Initial defaultPage from localStorage:', defaultPage);
    return defaultPage === 'chats' ? 'chats' : null;
  });

// 3. הוסף useEffect חדש שיבדוק את localStorage עבור defaultPage
// הוסף את הקוד הבא אחרי ההגדרות של המשתנים:

  // Check URL parameters for initial navigation when component mounts
  useEffect(() => {
    if (user) {
      // Check URL parameters
      const urlParams = new URLSearchParams(window.location.search);
      const pageParam = urlParams.get('page');
      if (pageParam) {
        console.log('Setting page from URL parameter:', pageParam);
        setActivePage(pageParam);
      }
      
      // Clear the defaultPage flag from localStorage after use
      if (localStorage.getItem('defaultPage')) {
        console.log('Clearing defaultPage flag from localStorage');
        localStorage.removeItem('defaultPage');
      }
    }
  }, [user]);

// 4. בנוסף, עדכן את ה-useEffect שמטפל בניווט
// מצא את ה-useEffect שמכיל את handleNavigation
// ועדכן אותו כך:

  useEffect(() => {
    const handleNavigation = (event) => {
      const { page } = event.detail;
      
      console.log('Navigation event received:', page);
      console.log('User authenticated:', !!user);
      console.log('Current activePage:', activePage);
      
      // Update active page based on navigation event
      switch(page) {
        case 'home':
          setActivePage(null);
          break;
        case 'chats':
          setActivePage('chats');
          break;
        case 'audio':
          setActivePage('audio');
          break;
        case 'extensions':
          setActivePage('extensions');
          break;
        case 'settings':
          setActivePage('settings');
          setSettingsTab('appearance');
          break;
        case 'help':
          setActivePage('settings');
          setSettingsTab('helpFaq');
          break;
        default:
          setActivePage(null);
      }
    };
    
    // Add event listener for navigation changes
    window.addEventListener('navigationChange', handleNavigation);
    console.log('Event listener added for navigationChange');
    
    // Clean up event listener
    return () => {
      console.log('Removing event listener for navigationChange');
      window.removeEventListener('navigationChange', handleNavigation);
    };
  }, [user, activePage]);

// 5. בדוק שהרנדור של הקומפוננטה מתייחס ל-activePage
// בסוף הפונקציה AppContent, וודא שהקוד נראה בערך כך:

  // Show main app interface for authenticated users
  return (
    <React.Suspense fallback={
      <div className="app-loading">
        <div className="loading-spinner"></div>
        <p>Loading interface...</p>
      </div>
    }>
      <MainLayout>
        {activePage === 'settings' ? (
          <SettingsPage 
            onClose={() => setActivePage(null)} 
            initialTab={settingsTab}
          />
        ) : activePage === 'extensions' ? (
          <div className="page-container">
            <div className="page-header">
              <h2 className="page-title">Extensions Manager</h2>
            </div>
            <ExtensionsManager />
          </div>
        ) : activePage === 'chats' ? (
          <div className="page-container">
            <div className="page-header">
              <h2 className="page-title">Chats</h2>
            </div>
            <div className="chat-container">
              <ChatSidebar 
                onSelectChat={handleSelectChat}
                activeChat={activeChat}
              />
              <ChatInterface 
                selectedLLM={selectedLLM}
                messages={messages}
                setMessages={setMessages}
                activeChat={activeChat}
              />
            </div>
          </div>
        ) : activePage === 'audio' ? (
          <div className="page-container">
            <div className="page-header">
              <h2 className="page-title">Audio Processing</h2>
            </div>
            <div className="audio-processing-placeholder">
              <p>Audio processing interface would be displayed here.</p>
            </div>
          </div>
        ) : (
          <HomePage />
        )}
      </MainLayout>
    </React.Suspense>
  );